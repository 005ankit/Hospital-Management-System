/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package hospital;
import java.sql.*;
import javax.swing.*;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import java.awt.Image;
import java.awt.Color;
/**
 *
 * @author anand
 */
public class addrec extends javax.swing.JFrame {

    /** Creates new form addrec */
    public addrec() {
        initComponents();
    }
    
    public addrec(String msg,int id) {
        initComponents();
        btnadd.setText(msg);
        txtid.setText(String.valueOf(id));
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","Admin");
            String q="select * from receptionist where id=?";
            PreparedStatement st=con.prepareStatement(q);
            st.setInt(1,id);
            ResultSet rs=st.executeQuery();
           long milliseconds = System.currentTimeMillis();
           Date d= new Date(milliseconds);

            long milliseconds1 = System.currentTimeMillis();
            Date b = new Date(milliseconds1);

            int i;
            String n,m,e,u,p,c,g;
            while(rs.next()){
                i=rs.getInt(1);
                n=rs.getString(2);
                d=rs.getDate(3);
                m=rs.getString(4);
                e=rs.getString(5);
                u=rs.getString(6);
                p=rs.getString(7);
                b=rs.getDate(8);
                c=rs.getString(9);
                g=rs.getString(10);
                
                txtname.setText(n);
                dcdoj.setDate(d);
                txtmob.setText(m);
                txtemail.setText(e);
                txtusername.setText(u);
                txtusername.setEditable(false);
                txtpassword.setText(p);
                txtpassword.setEditable(false);
                dcdob.setDate(b);
                txtcity.setText(c);
                if(g.equals("Male")){
                    rbmale.setSelected(true);
                }
                else if(g.equals("Female")){
                    rbfemale.setSelected(true);
                }
                else{
                    rbother.setSelected(true);
                }
                
            }
        }
        catch(Exception e){
            System.out.println("Error: "+e.getMessage());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Gendergroup = new javax.swing.ButtonGroup();
        Add = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtcity = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        rbmale = new javax.swing.JRadioButton();
        rbfemale = new javax.swing.JRadioButton();
        rbother = new javax.swing.JRadioButton();
        dcdob = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        txtmob = new javax.swing.JTextField();
        txtusername = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtpassword = new javax.swing.JPasswordField();
        jLabel12 = new javax.swing.JLabel();
        dcdoj = new com.toedter.calendar.JDateChooser();
        btnadd = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        txtid = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        Add.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/reception.jpg"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24)); // NOI18N
        jLabel2.setText("Receptionist Details");

        jLabel4.setText("Enter Mobile No. :");

        jLabel5.setText("Enter Email: ");

        jLabel6.setText("Enter Username: ");

        jLabel7.setText("Enter Password: ");

        txtcity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setText("Enter City: ");

        jLabel10.setText("Select Gender: ");

        rbmale.setBackground(new java.awt.Color(255, 255, 255));
        Gendergroup.add(rbmale);
        rbmale.setText("Male");

        rbfemale.setBackground(new java.awt.Color(255, 255, 255));
        Gendergroup.add(rbfemale);
        rbfemale.setText("Female");

        rbother.setBackground(new java.awt.Color(255, 255, 255));
        Gendergroup.add(rbother);
        rbother.setText("Other");

        dcdob.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dcdob.setDateFormatString("yyyy-MM-dd");

        jLabel8.setText("Select Date of Birth: ");

        txtname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtmob.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtusername.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtemail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Enter Name: ");

        txtpassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setText("Enter Date of joining: ");

        dcdoj.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dcdoj.setDateFormatString("yyyy-MM-dd");

        btnadd.setBackground(new java.awt.Color(146, 155, 248));
        btnadd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnadd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/crearte Account.png"))); // NOI18N
        btnadd.setText("Add");
        btnadd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnback.setBackground(new java.awt.Color(240, 255, 204));
        btnback.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-home-30.png"))); // NOI18N
        btnback.setText("Home");
        btnback.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        btnexit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-close-window-30.png"))); // NOI18N
        btnexit.setFocusable(false);
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });

        txtid.setForeground(new java.awt.Color(255, 255, 255));
        txtid.setText("0");

        org.jdesktop.layout.GroupLayout AddLayout = new org.jdesktop.layout.GroupLayout(Add);
        Add.setLayout(AddLayout);
        AddLayout.setHorizontalGroup(
            AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(AddLayout.createSequentialGroup()
                .add(87, 87, 87)
                .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(txtname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtmob, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 127, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtusername, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 147, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(dcdob, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(AddLayout.createSequentialGroup()
                        .add(rbmale, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(rbfemale, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(btnadd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(rbother, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(AddLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 153, Short.MAX_VALUE)
                        .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, AddLayout.createSequentialGroup()
                                .add(jLabel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 161, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(151, 151, 151))
                            .add(AddLayout.createSequentialGroup()
                                .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(dcdoj, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 134, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(txtemail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(txtpassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 135, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(txtcity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 219, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))
                    .add(AddLayout.createSequentialGroup()
                        .add(63, 63, 63)
                        .add(btnback, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))))
            .add(AddLayout.createSequentialGroup()
                .add(307, 307, 307)
                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 220, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
            .add(AddLayout.createSequentialGroup()
                .add(375, 375, 375)
                .add(jLabel1)
                .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(AddLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(btnexit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(AddLayout.createSequentialGroup()
                        .add(44, 44, 44)
                        .add(txtid, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))))
        );
        AddLayout.setVerticalGroup(
            AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(AddLayout.createSequentialGroup()
                .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(AddLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(AddLayout.createSequentialGroup()
                        .add(btnexit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtid, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2)
                .add(18, 18, 18)
                .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel12)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(AddLayout.createSequentialGroup()
                        .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(AddLayout.createSequentialGroup()
                                .add(1, 1, 1)
                                .add(dcdoj, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel4)
                                    .add(jLabel5))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(txtemail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(txtmob, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(18, 18, 18)
                                .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel6)
                                    .add(jLabel7))
                                .add(1, 1, 1)
                                .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, txtusername, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(txtpassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(txtname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jLabel9))
                    .add(jLabel8))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(dcdob, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtcity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jLabel10)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(rbfemale)
                    .add(rbother)
                    .add(rbmale))
                .add(18, 18, 18)
                .add(AddLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnadd)
                    .add(btnback))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(Add, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(Add, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        dispose();
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnexitActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        String update=btnadd.getText();
        String name=txtname.getText();
        String gender;
        String phone=txtmob.getText();
        String user=txtusername.getText();
        String pass=txtpassword.getText();
        String email=txtemail.getText();
        String city=txtcity.getText();
        int id=Integer.parseInt(txtid.getText());
            
        if(rbmale.isSelected()){
            gender="Male";
        }
        else if(rbfemale.isSelected()){
            gender="Female";
        }
        else if(rbother.isSelected()){
            gender="Other";
        }else{
            JOptionPane.showMessageDialog(this,"Please select Gender");
             return;  
        }
        
        if(name.isEmpty()){
            JOptionPane.showMessageDialog(this,"Please Enter Name");
            txtname.setBackground(new Color(246, 53, 40));
            return;
        }
        if(phone.matches("^[0-9]*$")==false || phone.length()!=10){
            JOptionPane.showMessageDialog(this,"Please check Phone Number");
            txtmob.setBackground(new Color(246, 53, 40));
            return;
        }
        
        if(email.matches("[a-zA-Z0-9\\-\\.]+@[a-z]+\\.[a-z]{2,3}")==false){
            JOptionPane.showMessageDialog(this,"Please check email");
            txtemail.setBackground(new Color(246, 53, 40));
            return;
        }
         if(city.isEmpty()){
            JOptionPane.showMessageDialog(this,"Please Enter city");
            txtcity.setBackground(new Color(246, 53, 40));
            return;
        }
          if(update=="Update"){
           try{
               
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","Admin");
                String query="update receptionist Set name=?,doj=?,phone=?,email=?,dob=?,city=?,gender=? Where id=?";
                PreparedStatement ps=con.prepareStatement(query);
                ps.setString(1,txtname.getText());
                    try{
                        java.util.Date utilDate1 = dcdoj.getDate();
                        long milliseconds1 = utilDate1.getTime();
                        java.sql.Date sqlDate1 = new java.sql.Date(milliseconds1);
                        ps.setDate(2,sqlDate1);
                    }
                    catch(Exception ex){
                        JOptionPane.showMessageDialog(this,"Please Enter Date of joining");
                        dcdoj.setBackground(new Color(246, 53, 40));
                        return;
                    }

                    ps.setString(3,txtmob.getText());
                    ps.setString(4,txtemail.getText());
//                    ps.setString(5,txtusername.getText());
//                    ps.setString(6,txtpassword.getText());
                    try{
                        java.util.Date utilDate = dcdob.getDate();
                        long milliseconds = utilDate.getTime();
                        java.sql.Date sqlDate = new java.sql.Date(milliseconds);
                        ps.setDate(5,sqlDate);
                    }
                    catch(Exception ex){
                        JOptionPane.showMessageDialog(this,"Please Enter Date of Birth");
                        dcdob.setBackground(new Color(246, 53, 40));
                        return;
                    }
                    ps.setString(6,txtcity.getText());
                    ps.setString(7,gender);
                    ps.setInt(8,id);
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this,"Updated succussfully !!!");
                    new viewrec().setVisible(true);
                    dispose();
                    return;
           }
           catch(Exception e){
               System.out.println("Error: "+e.getMessage());
           }
        }
         
        if(pass.length()>12 || pass.isEmpty()){
            JOptionPane.showMessageDialog(this,"Invalid password");
            txtpassword.setBackground(new Color(246, 53, 40));
            return;
        }
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","Admin");
            String q="Select * from receptionist where username=?";
            PreparedStatement ps1=con.prepareStatement(q);
            ps1.setString(1,user);
            ResultSet rs=ps1.executeQuery();
            if(rs.next()){
                JOptionPane.showMessageDialog(this,"Username is already taken");
                txtusername.setBackground(new Color(246, 53, 40));
            }
            else{
                 try{
                    
                    
                    String query="insert into receptionist(name,doj,phone,email,username,password,dob,city,gender) values(?,?,?,?,?,md5(?),?,?,?)";
                    PreparedStatement ps=con.prepareStatement(query);
                    ps.setString(1,txtname.getText());
                    try{
                        java.util.Date utilDate1 = dcdoj.getDate();
                        long milliseconds1 = utilDate1.getTime();
                        java.sql.Date sqlDate1 = new java.sql.Date(milliseconds1);
                        ps.setDate(2,sqlDate1);
                    }
                    catch(Exception ex){
                        JOptionPane.showMessageDialog(this,"Please Enter Date of joining");
                        dcdoj.setBackground(new Color(246, 53, 40));
                        return;
                    }

                    ps.setString(3,txtmob.getText());
                    ps.setString(4,txtemail.getText());
                    ps.setString(5,txtusername.getText());
                    ps.setString(6,txtpassword.getText());
                    try{
                        java.util.Date utilDate = dcdob.getDate();
                        long milliseconds = utilDate.getTime();
                        java.sql.Date sqlDate = new java.sql.Date(milliseconds);
                        ps.setDate(7,sqlDate);
                    }
                    catch(Exception ex){
                        JOptionPane.showMessageDialog(this,"Please Enter Date of Birth");
                        dcdob.setBackground(new Color(246, 53, 40));
                        return;
                    }
                    ps.setString(8,txtcity.getText());
                    ps.setString(9,gender);
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this,"Inserted succussfully !!!");
                    dispose();
                }
                catch(Exception e){
                    System.out.println("Error: "+e.getMessage());
                }
            }
        }
        catch(Exception e){
            System.out.println("Error "+e.getMessage());
        }
    }//GEN-LAST:event_btnaddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addrec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addrec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addrec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addrec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addrec().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Add;
    private javax.swing.ButtonGroup Gendergroup;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnexit;
    private com.toedter.calendar.JDateChooser dcdob;
    private com.toedter.calendar.JDateChooser dcdoj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton rbfemale;
    private javax.swing.JRadioButton rbmale;
    private javax.swing.JRadioButton rbother;
    private javax.swing.JTextField txtcity;
    private javax.swing.JTextField txtemail;
    private javax.swing.JLabel txtid;
    private javax.swing.JTextField txtmob;
    private javax.swing.JTextField txtname;
    private javax.swing.JPasswordField txtpassword;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables

}
